message=hello eureka client

#spring.application.name=eureka-client

eureka.client.registerWithEureka=true
#If registerWithEureka is true
#an instance registers with a Eureka server using a given URL; then onwards, it sends heartbeats every 30s
eureka.instance.leaseRenewalIntervalInSeconds=30
#If the server doesn’t receive a heartbeat, 
#it waits 90s before removing the instance from registry and there by disallowing traffic to that instance. 
#Sending heartbeat is an asynchronous task
eureka.instance.leaseExpirationDurationInSeconds=90
#
com.netflix.appinfo.InstanceInfo=eureka client instance
#InstanceInfo is sent to the Eureka server at regular intervals, starting at 40s after startup
eureka.client.initialInstanceInfoReplicationIntervalSeconds=40
#and then onwards every 30s
eureka.client.instanceInfoReplicationIntervalSeconds=30
eureka.client.heartbeatExecutorExponentialBackOffBound=10

eureka.client.fetchRegistry=true
#If eureka.client.fetchRegistry is true, 
#the client fetches the Eureka server registry at startup and caches it locally. 
#From then on, it only fetches the delta  
#this can be turned off by setting eureka.client.shouldDisableDelta to false, 
#although that’d be a waste of bandwidth
eureka.client.shouldDisableDelta=true
#The registry fetch is an asynchronous task scheduled every 30s
eureka.client.registryFetchIntervalSeconds=30
eureka.client.cacheRefreshExecutorExponentialBackOffBound=10

#eureka.client.server.waitTimeInMsWhenSyncEmpty=0
#eureka.client.serviceUrl.defaultZone= http://${eureka.instance.hostname}:${server.port}/eureka/

#The Eureka client prefers the same zone by default (configurable by eureka.client.preferSameZone). 
#From com.netflix.discovery.endpoint.EndpointUtils.getServiceUrlsFromDNS

customer-service.ribbon.eureka.enabled=false
customer-service.ribbon.listOfServers= localhost:8084,localhost:8085,localhost:8086
customer-service.ribbon.ServerListRefreshInterval= 1000